package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import AirCrash.Air.Airline;
import mappers.IMapResultSetIntoEntity;
import repositories.IAirlineRepository;
import uow.IUnitOfWork;

public class AirlineRepository extends RepositoryBase<Airline>
implements IAirlineRepository{

    private PreparedStatement getName;

	public AirlineRepository(Connection connection,
			IMapResultSetIntoEntity<Airline> mapper, IUnitOfWork uow) {
		super(connection,mapper, uow);

		try{
		    getName = connection.prepareStatement(getNameSql());
        }catch(SQLException e){
		    e.printStackTrace();
        }

	}
	
	@Override
	protected String createTableSql() {
		return "" + "CREATE TABLE airline("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
				+ "name varchar(20)," + ")";
	}

	@Override
	protected String tableName() {
		return "airline";
	}

	protected String insertSql() {
		return "INSERT INTO airline(name) VALUES (?)";
	}

	protected String updateSql() {
		return "UPDATE airline SET (name)=(?) WHERE id=?";
	}

	protected String getNameSql(){return "SELECT * FROM airline where name = ?";}


	@Override
	protected void setUpdate(Airline entity) throws SQLException {
		update.setString(1, entity.getName());
		
	}

	@Override
	protected void setInsert(Airline entity) throws SQLException {
		insert.setString(1, entity.getName());
	}



    private List<Airline> searchBy(String value){
        List<Airline> Airline = new ArrayList<AirCrash.Air.Airline>();
        try{
            getName.setString(1,value);
            ResultSet resultSet = getName.executeQuery();
            while(resultSet.next()){
            	Airline.add(mapper.map(resultSet));
            }
        }catch (SQLException e){
            e.printStackTrace();
        }
        return Airline;
    }

    
    public List<Airline> withName(String name) {
        return searchBy(name);
    }	
}

