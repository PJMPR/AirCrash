package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import mappers.IMapResultSetIntoEntity;
import repositories.IAirplaneRepository;
import uow.IUnitOfWork;
import AirCrash.Air.Airplane;

public class AirplaneRepository extends RepositoryBase<Airplane> implements IAirplaneRepository{

    private PreparedStatement getSeats;
    private PreparedStatement getModel;

	public AirplaneRepository(Connection connection,
			IMapResultSetIntoEntity<Airplane> mapper, IUnitOfWork uow) {
		super(connection,mapper, uow);

		try{
			getSeats = connection.prepareStatement(getSeatsSql());
			getModel = connection.prepareStatement(getModelSql());
        }catch(SQLException e){
		    e.printStackTrace();
        }

	}
	
	@Override
	protected String createTableSql() {
		return "" + "CREATE TABLE airplane("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
				+ "seats int," + "model varchar(50)" + ")";
	}

	@Override
	protected String tableName() {
		return "airplane";
	}

	protected String insertSql() {
		return "INSERT INTO airplane(seats, model) VALUES (?,?)";
	}

	protected String updateSql() {
		return "UPDATE airplane SET (seats, model)=(?,?) WHERE id=?";
	}

	protected String getSeatsSql(){return "SELECT * FROM airplane where seats = ?";}
	protected String getModelSql(){return "SELECT * FROM airplane where model=?";}


	@Override
	protected void setUpdate(Airplane entity) throws SQLException {
		update.setInt(1, entity.getSeats());
		update.setString(2, entity.getModel());
		
	}

	@Override
	protected void setInsert(Airplane entity) throws SQLException {
		insert.setInt(1, entity.getSeats());
		insert.setString(2, entity.getModel());
	}



    private List<Airplane> searchBy(String value){
        List<Airplane> airplane = new ArrayList<Airplane>();
        try{
            getSeats.setString(1,value);
            ResultSet resultSet = getSeats.executeQuery();
            while(resultSet.next()){
                airplane.add(mapper.map(resultSet));
            }
        }catch (SQLException e){
            e.printStackTrace();
        }
        return airplane;
    }

    public List<Airplane> withModel(String model) {
        return searchBy(model);
    }

	public List<Airplane> withSeats(String seats) {
		return searchBy(seats);
	}

}